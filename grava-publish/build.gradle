plugins {
    id 'java-library'
	id 'maven-publish'
}

repositories {
    mavenCentral()
    gradlePluginDevelopment()
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.16'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'

	implementation 'com.google.code.gson:gson:2.8.6'

    compileOnly gradleApi('6.2.1')

	testCompileOnly 'org.projectlombok:lombok:1.18.16'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
	testImplementation 'org.hamcrest:hamcrest-core:2.2'
}

tasks.withType(Test).configureEach {useJUnitPlatform() }

publishing {
	publications {
		library(MavenPublication) {
			from components.java
			pom {
				name = "${groupId}:${artifactId}"
				description = project.description
				inceptionYear = '2021'
				url = 'https://github.com/gradle-plugins/grava'
				scm {
					connection = 'scm:git:git://github.com/gradle-plugins/grava.git'
					developerConnection = 'scm:git:ssh://github.com:gradle-plugins/grava.git'
					url = 'http://github.com/gradle-plugins/grava/tree/main'
				}
				developers {
					developer {
						name = 'Daniel Lacasse'
						id = 'lacasseio'
					}
				}
				licenses {
					license {
						name = 'Apache License, Version 2.0'
						url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}
			}
		}
	}
	repositories {
		mavenLocal()
		maven {
			name = 'nokeeRelease'
			url = providers.gradleProperty("${name}Url").forUseAtConfigurationTime().orElse('')
			credentials(PasswordCredentials)
		}
	}
}
